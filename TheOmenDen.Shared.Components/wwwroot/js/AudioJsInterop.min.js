"use strict";function getAudio(n){return audioInstances[n]?audioInstances[n].sound:null}var _slicedToArray=function(){function n(n,t){var r=[],u=!0,f=!1,e=undefined,i,o;try{for(i=n[Symbol.iterator]();!(u=(o=i.next()).done);u=!0)if(r.push(o.value),t&&r.length===t)break}catch(s){f=!0;e=s}finally{try{!u&&i["return"]&&i["return"]()}finally{if(f)throw e;}}return r}return function(t,i){if(Array.isArray(t))return t;if(Symbol.iterator in Object(t))return n(t,i);throw new TypeError("Invalid attempt to destructure non-iterable instance");}}(),_wwwrootJsHowler=require("../wwwroot/js/howler"),audioInstances={};window.howl={play:function(n,t){var i=new _wwwrootJsHowler.Howl({src:t.sources,format:t.formats,html5:t.html5,loop:t.loop,volume:t.volume,onplay:function(t){var r;return regeneratorRuntime.async(function(u){for(;;)switch(u.prev=u.next){case 0:return r=i.duration(t),(r===Infinity||isNaN(r))&&(r=null),u.next=4,regeneratorRuntime.awrap(n.invokeMethodAsync("OnPlayCallback",t,r));case 4:case"end":return u.stop()}},null,this)},onstop:function(t){return regeneratorRuntime.async(function(i){for(;;)switch(i.prev=i.next){case 0:return i.next=2,regeneratorRuntime.awrap(n.invokeMethodAsync("OnStopCallback",t));case 2:case"end":return i.stop()}},null,this)},onpause:function(t){return regeneratorRuntime.async(function(i){for(;;)switch(i.prev=i.next){case 0:return i.next=2,regeneratorRuntime.awrap(n.invokeMethodAsync("OnPauseCallback",t));case 2:case"end":return i.stop()}},null,this)},onrate:function(t){var r;return regeneratorRuntime.async(function(u){for(;;)switch(u.prev=u.next){case 0:return r=i.rate(),u.next=3,regeneratorRuntime.awrap(n.invokeMethodAsync("OnRateCallback",t,r));case 3:case"end":return u.stop()}},null,this)},onend:function(t){return regeneratorRuntime.async(function(i){for(;;)switch(i.prev=i.next){case 0:return i.next=2,regeneratorRuntime.awrap(n.invokeMethodAsync("OnEndCallback",t));case 2:case"end":return i.stop()}},null,this)},onload:function(){return regeneratorRuntime.async(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,regeneratorRuntime.awrap(n.invokeMethodAsync("OnLoadCallback"));case 2:case"end":return t.stop()}},null,this)},onloaderror:function(t,i){return regeneratorRuntime.async(function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,regeneratorRuntime.awrap(n.invokeMethodAsync("OnLoadErrorCallback",t,i));case 2:case"end":return r.stop()}},null,this)},onplayerror:function(t,i){return regeneratorRuntime.async(function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,regeneratorRuntime.awrap(n.invokeMethodAsync("OnPlayErrorCallback",t,i));case 2:case"end":return r.stop()}},null,this)}});return window.soundId=i.play(),window.howlInstances[soundId]={howl:i,options:t},soundId},playSound:function(n){var t=window.getHowl(n);t&&t.play(soundId)},stop:function(n){var t=window.getHowl(n);t&&t.stop()},pause:function(n){var t=window.getHowl(n);t&&(t.playing()?t.pause(n):t.play(soundId))},seek:function(n,t){var i=window.getHowl(n);i&&i.seek(t)},rate:function(n,t){var i=window.getHowl(n);i&&i.rate(t)},load:function(n){var t=window.getHowl(n);t&&t.load()},unload:function(n){var t=window.getHowl(n);t&&(t.unload(),window.howlInstances[n]=null,delete window.instances[n])},getIsPlaying:function(n){var t=window.getHowl(n);return t?t.playing():!1},getRate:function(n){var t=window.getHowl(n);return t?t.rate():0},getCurrentTime:function(n){var i=window.getHowl(n),t;return i&&i.playing()?(t=i.seek(),t===Infinity||isNaN(t)?null:t):0},getTotalTime:function(n){var i=window.getHowl(n),t;return i?(t=i.duration(),t===Infinity||isNaN(t)?null:t):0},destroy:function(){Object.keys(window.howlInstances).forEach(function(n){try{unload(n)}catch(t){}})}};window.howler={mute:function(n){_wwwrootJsHowler.Howler.mute(n)},getCodecs:function(){var i=[],t=!0,r=!1,u=undefined,n,f;try{for(n=Object.entries(_wwwrootJsHowler.Howler._codecs)[Symbol.iterator]();!(t=(f=n.next()).done);t=!0){var e=_slicedToArray(f.value,2),o=e[0],s=e[1];s&&i.push(o)}}catch(h){r=!0;u=h}finally{try{!t&&n["return"]&&n["return"]()}finally{if(r)throw u;}}return i.sort()},isCodecSupported:function(n){return n?_wwwrootJsHowler.Howler._codecs[extensions.replace(/^x-/,"")]:!1}};